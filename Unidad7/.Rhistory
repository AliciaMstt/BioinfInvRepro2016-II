source("http://bioconductor.org/biocLite.R")
biocLite()
install.packages("adegenet")
# set wd to data folder path
getwd() # original working directory should be bin folder where this script is stored
source("http://bioconductor.org/biocLite.R")
biocLite("SNPRelate")
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
m <- cbind(1, 1:7)
View(m)
m <- cbind(m, 8:14)[, c(1, 3, 2)]
m
desiredfile <- "maiz_final" # here to the name of the plinkfile you will be working with
WD<- getwd() # original working directory should be meta folder where this script is stored
# Load libraries
library(gdsfmt)
library(SNPRelate)
##### Load the SNP data for package SNPRelate
# Open file
WD<- getwd() # original working directory should be bin folder where this script is stored
list.files()
# Load libraries
?s.class
library(adegenet)
?s.class
?citation
citation(ade4)
runGitHub("ProyectoGlobalMaices-50kSNP-spanish", "Alicia.Mstt")
library("shiny")
runGitHub("ProyectoGlobalMaices-50kSNP-spanish", "Alicia.Mstt")
runGitHub("ProyectoGlobalMaices-50kSNP-spanish", "Alicia.Mstt")
runGitHub("ProyectoGlobalMaices-50kSNP-spanish", "AliciaMstt")
library("shiny")
RunGitHub("ProyectoGlobalMaices-50kSNP-spanish", "AliciaMstt")
runGitHub("ProyectoGlobalMaices-50kSNP-spanish", "AliciaMstt")
library(maptools)
library(installr)
updateR()
remove.packages("maptools", lib="~/R/win-library/3.1")
adegenet::summary
library(adegenet)
install.packages("ape")
adegenet::summary
install.packages("plyr")
library(adegenet)
install.packages("adegenet")
adegenet::summary
install.packages("stringi")
install.packages("stringi")
adegenet::summary
showMethods("summary")
showMethods("summary")
?showMethods
showMethods)
showMethods(f="summary")
?read.pedfile
biocLite("snpStats")
source("http://bioconductor.org/biocLite.R")
biocLite("snpStats")
snpgen<-read.pedfile(file="../data/SNPs/maiz_final")
biocLite("snpStats")
snpgen<-read.pedfile(file="../data/SNPs/maiz_final")
library("snpStats", lib.loc="~/R/win-library/3.1")
x<-cbind(1:5, c("a", "a", "a", "b", "b"))
x
x[,x$2=="a"]
x[,=="a"]
x$2=="a"
x<-1:5
y<-c("a", "a", "a", "b", "b")
x<-cbind(x,y)
x
x[,x$y=="a"]
is.dataframe(x)
x<-as.dataframe(x)
is.data.frame(x)
x<-as.data.frame(x)
x[,x$y=="a"]
x$y=="a"
z<-x[x$y=="a",]
z
install.packages('devtools')
shinyapps::setAccountInfo(name='conabio', token='7D0A583F7B1455DDBEB0E60C29ABD484', secret='Cu0iy4tNguDgyzNsDtxt223bNEASO4idGxZGYmgP')
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='conabio', token='7D0A583F7B1455DDBEB0E60C29ABD484', secret='Cu0iy4tNguDgyzNsDtxt223bNEASO4idGxZGYmgP')
1+1
1+1
?match()
?httr
library(rcrossref)
?httr
cr_works(query = 'Mexico NOT "New Mexico"', from_pub_date='2004-04-04')
require(devtools)
install_github('rCharts', 'ramnathv')
shiny::runApp('C:/Users/amastretta/Downloads/shiny_maiz')
library(shiny)
library(leaflet)
install.packages("leaflet")
shiny::runApp('C:/Users/amastretta/Downloads/shiny_maiz')
install.packages("rgdal")
shiny::runApp('C:/Users/amastretta/Downloads/shiny_maiz')
install.packages("downloader")
shiny::runApp('C:/Users/amastretta/Downloads/shiny_maiz')
shiny::runApp('C:/Users/amastretta/Downloads/shiny_maiz')
2^50
2^10
2^8
2^4
2^5
2^7
2^6
sqrt(100)
10^2
pew <- read.delim(file = "http://stat405.had.co.nz/data/pew.txt",
header = TRUE, stringsAsFactors = FALSE, check.names = F)
pew
library(plyr)
library(dplyr)
# cargamos el paquete
library(tidyr)
library(plyr)
library(dplyr)
pew_tidy <- gather(data = pew, income, frequency, -religion)
# vemos las primeras líneas de nuestros datos alargados
head(pew_tidy)
# y las últimas
tail(pew_tidy)
library(ggplot2)
ggplot(pew_tidy, aes(x = income, y = frequency, color = religion,
group = religion)) +
geom_line() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
by_religion <- group_by(pew_tidy, religion)
pew_tidy_2 <- pew_tidy %>%
filter(income != "Don't know/refused") %>%
group_by(religion) %>%
mutate(percent = frequency / sum(frequency)) %>%
filter(sum(frequency) > 1000)
head(pew_tidy_2)
ggplot(pew_tidy_2, aes(x = income, y = percent, group = religion)) +
facet_wrap(~ religion, nrow = 1) +
geom_bar(stat = "identity", fill = "darkgray") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
read_csv
?read_csv
tb <- read.csv("../Practicas/data/tb.csv")
tb <- read.csv("/../Practicas/data/tb.csv")
setwd("C:/Users/amastretta/hubiC/Science/Teaching/Mx/BioinfInvgRepro/BioinfInvRepro2016-II/Unidad7")
tb <- read.csv("/../Practicas/data/tb.csv")
tb <- read.csv("/../Practicas/Uni7/data/tb.csv")
tb
tb <- read.csv("../Practicas/Uni7/data/tb.csv")
View(tb)
tb
head(tb)
tb_long <- gather(tb, demo, n, -iso2, -year, -id, na.rm = TRUE)
tb_long
colnames(tb)
head(tb)
tb_long <- gather(tb, demo, n, -iso2, -year, -id, na.rm = TRUE)
head(tb_long)
head(tb)
?separate
tb_tidy <- separate(tb_long, demo, c("sex", "age"), 8)
tb_tidy
head(tb_tidy)
table(tb_tidy$sex)
tb_tidy <- mutate(tb_tidy, sex = substr(sex, 8, 8))
table(tb_tidy$sex)
head(tb_tidy)
tb_tidy <- separate(tb_long, demo, c("sex", "age"), 8)
head(tb_tidy)
class(tb_tidy$sex)
clima <- read.delim("C:/Users/amastretta/hubiC/Science/Teaching/Mx/BioinfInvgRepro/BioinfInvRepro2016-II/Practicas/Uni7/data/clima.txt", stringsAsFactors=FALSE)
View(clima)
clima <- read.delim("../Practicas/Uni7/data/clima.txt", stringsAsFactors=FALSE)
clima
head(clima)
clima_long <- gather(clima, day, value, d1:d31, na.rm = TRUE)
head(clima_long)
clima_vars <- clima_long %>%
mutate(day = extract_numeric(day), value = value / 10)  %>%
select(id, year, month, day, element, value) %>%
arrange(id, year, month, day)
head(clima_vars)
?select
?mutate
clima_tidy <- spread(clima_vars, element, value)
head(clima_tidy)
clima_lm <- lm(TMAX ~ factor(month), data = clima_tidy)
summary(clima_lm)
flights <- read.csv("../Practicas/Uni7/data/flights.csv")
View(flights)
View(flights)
df_ej <- data.frame(genero = c("mujer", "hombre", "mujer", "mujer", "hombre"),
estatura = c(1.65, 1.80, 1.70, 1.60, 1.67))
df_ej
filter(df_ej, genero == "mujer")
filter(df_ej, estatura > 1.65 & estatura < 1.75)
?"data.frame"
filter(df_ej, genero == "mujer")
filter(df_ej, estatura > 1.65 & estatura < 1.75)
df_ej <- data.frame(genero = c("mujer", "hombre", "mujer", "mujer", "hombre"),
estatura = c(1.65, 1.80, 1.70, 1.60, 1.67))
df_ej
filter(df_ej, genero == "mujer")
filter(df_ej, estatura > 1.65 & estatura < 1.75)
?filter
df_ej$genero
?data.frame
df_ej <- data.frame(genero = c("mujer", "hombre", "mujer", "mujer", "hombre"),
estatura = c(1.65, 1.80, 1.70, 1.60, 1.67), stringsAsFactors = FALSE)
df_ej
